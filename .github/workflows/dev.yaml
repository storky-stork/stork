name: CI-development
on:
  push:
    branches:
      - dev
  pull_request:

jobs:
  main:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout [dev]
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16'
      - run: npm install
      - run: npx nx affected --target=build --parallel=3
      - run: npx nx affected --target=test --parallel=2
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16'
      - run: npm install
      - run: npx nx affected --target=build --parallel=3
      - run: npx nx affected --target=test --parallel=2
      - run: echo '${{ github.event.pull_request.head.ref }}'
  # deploy-dev:
  #   needs: build 
  #   runs-on: ubuntu-latest
  #     - name: Dump GitHub context
  #       id: github_context_step
        # run: echo '${{ toJSON(github) }}'
    # if: ${{ needs.build.outputs.branch == 'dev' }}
    # steps:
    #   - name: Download built frontend files
    #     uses: actions/download-artifact@v2
    #     with:
    #       name: app-build
    #       path: dist
    #   - run: aws s3 sync . s3://app-${{ needs.build.outputs.branch}}-bucket
    #     working-directory: dist
    #     env: 
    #       AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
    #       AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_KEY }}
    #       AWS_DEFAULT_REGION: "eu-central-1"
  # deploy-prod:
  #   needs: build 
  #   runs-on: ubuntu-latest
  #   if: ${{ needs.build.outputs.branch == 'prod' }}
  #   steps:
  #     - name: Download built frontend files
  #   uses: actions/download-artifact@v2
  #   with:
  #     name: app-build
  #     path: dist
  #     - run: aws s3 sync . s3://app-${{ needs.build.outputs.branch}}-bucket
  #   working-directory: dist
  #   env: 
  #     AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_KEY }}
  #     AWS_DEFAULT_REGION: "eu-central-1"
